"""many_breaking_changes

Revision ID: b17f16df0fbb
Revises: bc9b04a3f508
Create Date: 2025-06-18 05:16:52.312511

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b17f16df0fbb"
down_revision: Union[str, None] = "bc9b04a3f508"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agent_task_tracker",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("agent_id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("status", sa.Text(), nullable=True),
        sa.Column("status_reason", sa.Text(), nullable=True),
        sa.Column("last_processed_event_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id", "agent_id", "task_id"),
    )
    op.create_index(
        "idx_agent_task_tracker_agent_task",
        "agent_task_tracker",
        ["agent_id", "task_id"],
        unique=False,
    )
    op.create_table(
        "events",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("sequence_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("agent_id", sa.String(), nullable=False),
        sa.Column("content", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("sequence_id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        "idx_events_agent_order", "events", ["agent_id", "sequence_id"], unique=False
    )
    op.create_index(
        "idx_events_agent_task_order",
        "events",
        ["agent_id", "task_id", "sequence_id"],
        unique=False,
    )
    op.drop_index(op.f("ix_agents_build_job_name"), table_name="agents")
    op.drop_column("agents", "packaging_method")
    op.drop_column("agents", "build_job_name")
    op.drop_column("agents", "workflow_name")
    op.drop_column("agents", "workflow_queue_name")
    op.drop_column("agents", "build_job_namespace")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "agents",
        sa.Column(
            "build_job_namespace", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "agents",
        sa.Column(
            "workflow_queue_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "agents",
        sa.Column("workflow_name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "agents",
        sa.Column("build_job_name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "agents",
        sa.Column(
            "packaging_method",
            postgresql.ENUM("DOCKER", name="packagingmethod"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index(
        op.f("ix_agents_build_job_name"), "agents", ["build_job_name"], unique=False
    )
    op.drop_index("idx_events_agent_task_order", table_name="events")
    op.drop_index("idx_events_agent_order", table_name="events")
    op.drop_table("events")
    op.drop_index("idx_agent_task_tracker_agent_task", table_name="agent_task_tracker")
    op.drop_table("agent_task_tracker")
    # ### end Alembic commands ###
