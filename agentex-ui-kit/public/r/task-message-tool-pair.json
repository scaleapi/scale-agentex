{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "task-message-tool-pair",
  "type": "registry:ui",
  "title": "Task Message Tool Pair",
  "description": "Component for displaying task message tool request/response pairs.",
  "dependencies": [
    "agentex@0.1.0-alpha.6",
    "class-variance-authority",
    "lucide-react",
    "react"
  ],
  "registryDependencies": [
    "collapsible",
    "utils",
    "http://localhost:3000/r/code.json"
  ],
  "files": [
    {
      "path": "registry/agentex/task-message-tool-pair/task-message-tool-pair.tsx",
      "content": "import {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { cn } from \"@/lib/utils\";\nimport { Code } from \"@/registry/agentex/code/code\";\nimport type {\n  TaskMessage,\n  ToolRequestContent,\n  ToolResponseContent,\n} from \"agentex/resources\";\nimport { cva } from \"class-variance-authority\";\nimport { ChevronsUpDown } from \"lucide-react\";\nimport { memo } from \"react\";\n\nconst variants = cva(\"rounded-md p-4 flex flex-col gap-2\", {\n  variants: {\n    author: {\n      user: \"bg-accent text-accent-foreground\",\n      agent: \"bg-background\",\n    },\n  },\n});\n\ntype TaskMessageToolPairComponentProps = {\n  toolRequestMessage: TaskMessage & { content: ToolRequestContent };\n  toolResponseMessage?:\n    | (TaskMessage & { content: ToolResponseContent })\n    | undefined;\n  theme: \"dark\" | \"light\";\n};\n\nfunction TaskMessageToolPairComponent({\n  toolRequestMessage,\n  toolResponseMessage,\n  theme,\n}: TaskMessageToolPairComponentProps) {\n  return (\n    <Collapsible\n      className={cn(variants({ author: toolRequestMessage.content.author }))}\n    >\n      <div>\n        <CollapsibleTrigger className=\"flex items-center\">\n          <span className=\"px-4 py-2 font-mono\">\n            {toolRequestMessage.content.name}\n          </span>\n          <span className=\"cursor-pointer size-8 m-2 inline-flex items-center justify-center\">\n            <ChevronsUpDown />\n            <span className=\"sr-only\">Details</span>\n          </span>\n        </CollapsibleTrigger>\n      </div>\n      <CollapsibleContent className=\"flex flex-col ml-8 gap-4\">\n        <div className=\"group\">\n          <blockquote>Request</blockquote>\n          <Code\n            agentexWhitespaceWrap\n            agentexCodeLanguage=\"json\"\n            agentexColorTheme={theme}\n            className=\"overflow-x-auto max-w-full\"\n          >\n            {JSON.stringify(toolRequestMessage.content.arguments, null, 2)}\n          </Code>\n        </div>\n\n        <div className=\"group\">\n          <blockquote>Response</blockquote>\n          {toolResponseMessage === undefined ? (\n            <code>pending...</code>\n          ) : (\n            <Code\n              agentexWhitespaceWrap\n              agentexCodeLanguage=\"json\"\n              agentexColorTheme={theme}\n              className=\"overflow-x-auto max-w-full\"\n            >\n              {typeof toolResponseMessage.content.content === \"string\"\n                ? toolResponseMessage.content.content\n                : JSON.stringify(toolResponseMessage.content.content, null, 2)}\n            </Code>\n          )}\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  );\n}\n\nconst MemoizedTaskMessageToolPairComponent = memo(TaskMessageToolPairComponent);\n\nexport { MemoizedTaskMessageToolPairComponent, TaskMessageToolPairComponent };\n\n",
      "type": "registry:ui"
    }
  ]
}