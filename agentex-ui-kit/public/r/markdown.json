{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "markdown",
  "type": "registry:ui",
  "title": "Markdown",
  "description": "Renders markdown with basic and extended syntax specified by markdownguide.org",
  "dependencies": [
    "react",
    "remark-gfm",
    "react-markdown"
  ],
  "registryDependencies": [
    "utils",
    "http://localhost:3000/r/code.json"
  ],
  "files": [
    {
      "path": "registry/agentex/markdown/markdown.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { MemoizedCode } from \"@/registry/agentex/code/code\";\nimport { lazy, Suspense } from \"react\";\nimport remarkGfm from \"remark-gfm\";\n\nconst ReactMarkdown = lazy(() => import(\"react-markdown\"));\n\ntype MarkdownProps = {\n  theme: \"dark\" | \"light\";\n  children: string;\n  wrap?: boolean;\n};\n\nfunction Markdown({ theme, children, wrap = false }: MarkdownProps) {\n  return (\n    <Suspense\n      fallback={\n        <pre\n          className={cn({\n            \"font-sans text-pretty whitespace-pre-wrap wrap-anywhere\": wrap,\n          })}\n        >\n          {children}\n        </pre>\n      }\n    >\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm]}\n        rehypePlugins={[]}\n        components={{\n          code({ ...props }) {\n            const [, agentexCodeLanguage] =\n              /language-(\\w+)/.exec(props.className ?? \"\") ?? [];\n            return (\n              <MemoizedCode\n                {...props}\n                agentexColorTheme={theme}\n                agentexCodeLanguage={agentexCodeLanguage}\n                agentexWhitespaceWrap={wrap}\n              />\n            );\n          },\n        }}\n      >\n        {children}\n      </ReactMarkdown>\n    </Suspense>\n  );\n}\n\nexport { Markdown };\n",
      "type": "registry:ui"
    }
  ]
}